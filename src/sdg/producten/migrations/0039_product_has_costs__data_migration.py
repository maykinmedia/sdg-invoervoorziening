# Generated by Django 3.2.13 on 2022-10-05 12:07
from datetime import date

from django.db import migrations
from django.db.models import Subquery, OuterRef, Prefetch

from sdg.core.utils import get_from_cache
from sdg.producten.models import ProductQuerySet


def _matches_keywords(text):
    keywords = [
        "â‚¬",
        "EUR",
        "gratis",
    ]
    return any(keyword in text for keyword in keywords)


def update_product_has_costs(apps, schema_editor):
    Product = apps.get_model("producten", "Product")
    ProductVersie = apps.get_model("producten", "ProductVersie")

    active_on = date.today()

    subquery = Subquery(
        ProductVersie.objects.exclude(publicatie_datum=None)
        .filter(publicatie_datum__lte=active_on)
        .filter(product=OuterRef("product"))
        .order_by("-versie")
        .values_list("pk", flat=True)[:1]
    )
    products = Product.objects.prefetch_related(
        Prefetch(
            "versies",
            to_attr="_active_version",
            queryset=ProductVersie.objects.filter(pk__in=subquery).prefetch_related(
                "vertalingen"
            ),
        )
    )

    for product in products:
        if active_version := get_from_cache(
            product, "active_version", manager_methods=[ProductQuerySet.active]
        ):
            dutch_product = active_version.vertalingen.get(taal="nl")
            product.heeft_kosten = _matches_keywords(
                dutch_product.kosten_en_betaalmethoden
            )
            product.save()


class Migration(migrations.Migration):

    dependencies = [
        ("producten", "0038_product_heeft_kosten"),
    ]

    operations = [
        migrations.RunPython(update_product_has_costs, migrations.RunPython.noop),
    ]
