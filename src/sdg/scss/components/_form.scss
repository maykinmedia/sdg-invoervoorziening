@import "colors";

.form {
  $form-gap: $grid-margin-2;
  $form-gap--small: $grid-margin-1;
  $form-label-row-gap: $grid-margin-0;
  --field-border-color: #{$color_grey_light};

  &__field {
    border-bottom: 1px solid $color_grey_light;
    padding: $form-gap 0;
    display: grid;
    grid-template-areas: "hdr"
                        "bdy";
    grid-template-rows: auto auto;
    gap: $form-label-row-gap;
    width: 100%;
    
    &--inline {
      padding: 12px 0;
      grid-template-areas: "hdr bdy";
      grid-template-rows: auto;
      grid-template-columns: 28% auto;
      gap: 0;
    }

    &-header {
      grid-area: hdr;
    }

    &-body {
      display: grid;
      grid-auto-columns: minmax(0, 1fr);
      grid-auto-flow: column;
      gap: $form-gap;
      grid-area: bdy;
    }

    &-footer{
      gap: 8px;
      margin-top: $form-gap;
    }
    
    &-label {
      gap: $grid-margin-0;
      align-items: center;
      display: flex;
    }

    &-toolbar {
      // display: contents;

      &[aria-hidden=true] {
        display: none;
        visibility: hidden;
      }
    }
  }

  &__input {
    border: 1px solid var(--field-border-color);
    color: #212121;  
    font-size: 16px;
    line-height: 1.5;
    min-height: 57px;
    outline: none;
    padding: .75rem;
    vertical-align: top;
    width: 100%;

    // Input states
    &[disabled],
    &[readonly]:not(.flatpickr-input),
    &--disabled {
      background-color: $color_grey_lightest;
    }

    &[disabled]::placeholder,
    &[readonly]::placeholder {
      color: transparent;
    }

    // Modifiers
    &--preview {
      --field-border-color: #{$color_grey_light};
      background-color: $color_grey_lightest;
      cursor: default;
      min-height: auto;

      &:empty{
        min-height: 50px;
      }
    }

    &--wrapper {
      padding: 0 !important;
      border: 0 !important;
    }

    // Nested elements
    ol {
      counter-reset: li;
      list-style: none;
  
      li {
        counter-increment: li;
        display:table-row;
      }
  
      li:before {
        content: counter(li) '.';
        color: #777;
        width: 16px;
        display: table-cell;
        vertical-align: top;
      }
    }
  
    ul {
      list-style: none;
  
      li {
        display:table-row;
      }
  
      li:before {
        content: "â€”";
        color: #777;
        width: 16px;
        display: table-cell;
        vertical-align: top;
      }
  
    }

    // All elements inside `.form__input` has a margin-bottom of 1rem except the last one.
    & > *:not(:last-child) {
      margin-bottom: 1rem;
    }
  }  

  &__control {
    display: flex;
    flex-direction: column;
    gap: $form-label-row-gap;

    
  
    &-hint {
      font-size: .875rem;
      color: $color_secondary_darkest;
    }

    &-body {
      display: flex;
      flex-direction: column;
      grid-area: bdy;
      position: relative;
      width: 100%;

      // Field error indication as a border.
      &:has(.errorlist) {
        --ck-color-base-border: #{$color-red};
        --field-border-color: #{$color-red};
  
        .ck .ck-insert-table-dropdown-grid-box {
          // reset error border in the insertable table option from CKEditor
          --ck-color-base-border: #ccced1; 
        }
      }
    }

    // Apply error styling to the the border of the input on error.
    &-body:has(.errorlist) {
      --ck-color-base-border: #{$color-red};
      --field-border-color: #{$color-red};

      .ck .ck-insert-table-dropdown-grid-box {
        --ck-color-base-border: #ccced1; // reset error border in the insertable table option from CKEditor
      }
    }
  
    &-footer {
      margin-top: $form-gap--small;
      display: flex;
      flex-direction: column;
      gap:$form-label-row-gap;
    }

  }

  // Control states
  .form__control[aria-hidden="true"],
  .svg-inline--fa[aria-hidden="true"] {
    display: none;
    visibility: hidden;
  }

  & &__order {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex-shrink: 0;

    .svg-inline--fa[aria-hidden="true"] {
      visibility: visible;
      display: block;
    }
  }


  &__group {
    display: flex;
    flex-direction: column;
    border: 0;
    margin-bottom: 24px;
    transition: opacity 0.3s ease;

    &:has(.errorlist) {
      --field-border-color: #{$color-red};
    }

    &--pad {
      border: 0;
      padding-bottom: 8px;
    }

    &--nopad {
      border: 0;
    }

    &--hidden {
      opacity: 0;
      pointer-events: none;
    }
  }

  &__label {
    margin-bottom: 8px;
    font-size: 16px;

    &--no-spacing {
      margin-bottom: 0;
    }
  }

  &__input {
    border: 1px solid #dfdfdf;
    padding: 12px;
    outline: none;
    font-size: 16px;
    width: 100%;
    min-height: 57px;

    &[disabled],
    &[readonly]:not(.flatpickr-input),
    &--disabled {
      background-color: $color_grey_lightest;
    }

    &[disabled]::placeholder,
    &[readonly]::placeholder {
      color: transparent;
    }
  }

  &__block {
    width: 425px;

    &-inline {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
    }

    &-group {
      display: grid;
      grid-template-columns: 1fr 1fr;

      & > div {
        padding: 24px;

        &:only-child {
          padding-top: 0;
        }
      }
    }
  }

  &__special-group {
    &.form__table {
      border: none;
    }

    .form__help-text {
      display: none;
    }
  }

  &__table {
    display: grid;
    grid-template-columns: 95px 1fr;
    grid-gap: 8px;
    align-items: center;
    border-left: 1px solid $color_secondary;

    &-header {
      text-transform: uppercase;
      font-weight: bold;

      &--left {
        min-height: 18px;
        margin-bottom: 16px;
      }
    }
  }

  &__forms {
    width: 62%;
    padding: 8px 0;
  }

  &__help-text {
    margin-top: 4px;
    font-size: 14px;
    color: $color_secondary_darker;
  }

  &__checkbox {
    transition: opacity 400ms;

    &--invisible {
      opacity: 0;
    }
  }

  .errorlist {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 8px;

    li {
      color: $color_red;
      background-color: lighten($color_red, 36%);
      padding: 14px;
      list-style: none;

      &::before {
        content: "" !important;
      }
    }
  }

  textarea {
    resize: none;
  }
}
